
@article{may_metpy_2022,
	title = {{MetPy}: {A} {Meteorological} {Python} {Library} for {Data} {Analysis} and {Visualization}},
	shorttitle = {{MetPy}},
	url = {https://journals.ametsoc.org/view/journals/bams/103/10/BAMS-D-21-0125.1.xml},
	doi = {10.1175/BAMS-D-21-0125.1},
	abstract = {MetPy is an open-source, Python-based package for meteorology, providing domain-specific functionality built extensively on top of the robust scientific Python software stack, which includes libraries like NumPy, SciPy, Matplotlib, and xarray. The goal of the project is to bring the weather analysis capabilities of GEMPAK (and similar software tools) into a modern computing paradigm. MetPy strives to employ best practices in its development, including software tests, continuous integration, and automated publishing of web-based documentation. As such, MetPy represents a sustainable, long-term project that fills a need for the meteorological community. MetPy’s development is substantially driven by its user community, both through feedback on a variety of open, public forums like Stack Overflow, and through code contributions facilitated by the GitHub collaborative software development platform. MetPy has recently seen the release of version 1.0, with robust functionality for analyzing and visualizing meteorological datasets. While previous versions of MetPy have already seen extensive use, the 1.0 release represents a significant milestone in terms of completeness and a commitment to long-term support for the programming interfaces. This article provides an overview of MetPy’s suite of capabilities, including its use of labeled arrays and physical unit information as its core data model, unit-aware calculations, cross sections, skew T and GEMPAK-like plotting, station model plots, and support for parsing a variety of meteorological data formats. The general road map for future planned development for MetPy is also discussed.},
	language = {en},
	urldate = {2025-07-19},
	author = {May, Ryan M. and Goebbert, Kevin H. and Thielen, Jonathan E. and Leeman, John R. and Camron, M. Drew and Bruick, Zachary and Bruning, Eric C. and Manser, Russell P. and Arms, Sean C. and Marsh, Patrick T.},
	month = oct,
	year = {2022},
	note = {Section: Bulletin of the American Meteorological Society},
	keywords = {Software, Atmosphere, Algorithms, Data processing/distribution},
}

@article{crameri_misuse_2020,
	title = {The misuse of colour in science communication},
	volume = {11},
	copyright = {2020 The Author(s)},
	issn = {2041-1723},
	url = {https://www.nature.com/articles/s41467-020-19160-7},
	doi = {10.1038/s41467-020-19160-7},
	abstract = {The accurate representation of data is essential in science communication. However, colour maps that visually distort data through uneven colour gradients or are unreadable to those with colour-vision deficiency remain prevalent in science. These include, but are not limited to, rainbow-like and red–green colour maps. Here, we present a simple guide for the scientific use of colour. We show how scientifically derived colour maps report true data variations, reduce complexity, and are accessible for people with colour-vision deficiencies. We highlight ways for the scientific community to identify and prevent the misuse of colour in science, and call for a proactive step away from colour misuse among the community, publishers, and the press.},
	language = {en},
	number = {1},
	urldate = {2025-08-10},
	journal = {Nature Communications},
	author = {Crameri, Fabio and Shephard, Grace E. and Heron, Philip J.},
	month = oct,
	year = {2020},
	note = {Publisher: Nature Publishing Group},
	keywords = {Software, Scientific community},
	pages = {5444},
}

@article{hunter_matplotlib_2007,
	title = {Matplotlib: {A} {2D} {Graphics} {Environment}},
	volume = {9},
	issn = {1558-366X},
	shorttitle = {Matplotlib},
	url = {https://ieeexplore.ieee.org/document/4160265},
	doi = {10.1109/MCSE.2007.55},
	abstract = {Matplotlib is a 2D graphics package used for Python for application development, interactive scripting,and publication-quality image generation across user interfaces and operating systems},
	number = {3},
	urldate = {2025-08-13},
	journal = {Computing in Science \& Engineering},
	author = {Hunter, John D.},
	month = may,
	year = {2007},
	keywords = {application development, Computer languages, Equations, Graphical user interfaces, Graphics, Image generation, Interpolation, Operating systems, Packaging, Programming profession, Python, scientific programming, scripting languages, User interfaces},
	pages = {90--95},
}

@article{lin_why_2012,
	title = {Why {Python} {Is} the {Next} {Wave} in {Earth} {Sciences} {Computing}},
	url = {https://journals.ametsoc.org/view/journals/bams/93/12/bams-d-12-00148.1.xml},
	doi = {10.1175/BAMS-D-12-00148.1},
	abstract = {"Why Python Is the Next Wave in Earth Sciences Computing" published on Dec 2012 by American Meteorological Society.},
	language = {en},
	urldate = {2025-09-16},
	author = {Lin, Johnny Wei-Bing},
	month = dec,
	year = {2012},
	note = {Section: Bulletin of the American Meteorological Society},
}

@book{trauth_python_2024,
	address = {Cham},
	series = {Springer {Textbooks} in {Earth} {Sciences}, {Geography} and {Environment}},
	title = {Python {Recipes} for {Earth} {Sciences}},
	copyright = {https://www.springernature.com/gp/researchers/text-and-data-mining},
	isbn = {978-3-031-56905-0 978-3-031-56906-7},
	url = {https://link.springer.com/10.1007/978-3-031-56906-7},
	language = {en},
	urldate = {2025-09-16},
	publisher = {Springer Nature Switzerland},
	author = {Trauth, Martin H.},
	year = {2024},
	doi = {10.1007/978-3-031-56906-7},
	keywords = {Climate time series analysis, Computational geosciences, Digital elevation models, Geomodeling, Geostatistics},
}

@article{velden_cmasher_2020,
	title = {{CMasher}: {Scientific} colormaps for making accessible, informative and 'cmashing' plots},
	volume = {5},
	issn = {2475-9066},
	shorttitle = {{CMasher}},
	url = {https://joss.theoj.org/papers/10.21105/joss.02004},
	doi = {10.21105/joss.02004},
	abstract = {van der Velden, (2020). CMasher: Scientific colormaps for making accessible, informative and 'cmashing' plots. Journal of Open Source Software, 5(46), 2004, https://doi.org/10.21105/joss.02004},
	language = {en},
	number = {46},
	urldate = {2025-09-19},
	journal = {Journal of Open Source Software},
	author = {Velden, Ellert van der},
	month = feb,
	year = {2020},
	pages = {2004},
}

@misc{blaylock_herbie_2025,
	title = {Herbie: {Retrieve} {Numerical} {Weather} {Prediction} {Model} {Data}},
	copyright = {MIT License},
	shorttitle = {Herbie},
	url = {https://zenodo.org/doi/10.5281/zenodo.4567540},
	abstract = {Herbie is a python package that downloads recent and archived numerical weather prediction (NWP) model output from different cloud archive sources. Its most popular capability is to download HRRR model data. NWP data in GRIB2 format can be read into an xarray dataframe using the cfgrib package. Much of this data is made available through the NOAA Open Data Dissemination (NODD) Program (formerly the Big Data Program) which has made weather data more accessible than ever before.},
	urldate = {2025-09-19},
	publisher = {Zenodo},
	author = {Blaylock, Brian K.},
	month = jul,
	year = {2025},
	doi = {10.5281/ZENODO.4567540},
	keywords = {atmosphere, forecast, meteorology, numerical weather prediction, weather},
	annote = {Other
If you use this software, please cite it as below.},
}

@misc{akhmerov_cmap_2025,
	title = {cmap},
	url = {https://github.com/pyapp-kit/cmap},
	abstract = {Scientific colormaps for python, with only numpy dependency},
	urldate = {2025-09-19},
	publisher = {pyapp-kit},
	author = {Akhmerov, Anton},
	month = sep,
	year = {2025},
	note = {original-date: 2022-12-31T20:55:32Z},
	keywords = {colormaps, python, visualization},
}

@misc{may_metpy_2016,
	title = {{MetPy}: {A} {Python} {Package} for {Meteorological} {Data}},
	copyright = {BSD 3-Clause License},
	shorttitle = {{MetPy}},
	url = {https://www.unidata.ucar.edu/software/metpy/},
	abstract = {MetPy is a collection of tools in Python for reading, visualizing and performing calculations with weather data. The space MetPy aims for is GEMPAK (and maybe NCL)-like functionality, in a way that plugs easily into the existing scientific Python ecosystem (numpy, scipy, matplotlib). So, if you take the average GEMPAK script for a weather map, you need to: - read data - calculate a derived field - show on a map/skew-T One of the benefits hoped to achieve over GEMPAK is to make it easier to use these routines for any meteorological Python application; this means making it easy to pull out the LCL calculation and just use that, or re-use the Skew-T with your own data code. MetPy also prides itself on being well-documented and well-tested, so that on-going maintenance is easily manageable. The intended audience is that of GEMPAK: researchers, educators, and any one wanting to script up weather analysis. It doesn't even have to be scripting; all python meteorology tools are hoped to be able to benefit from MetPy. Conversely, it's hoped to be the meteorological equivalent of the audience of scipy/scikit-learn/skimage.},
	urldate = {2025-09-19},
	publisher = {UCAR/NCAR - Unidata},
	author = {May, Ryan and Arms, Sean and Marsh, Patrick and Bruning, Eric and Leeman, John and Bruick, Zachary and Camron, M. Drew},
	collaborator = {May, Ryan and University Corporation For Atmospheric Research, Unidata},
	year = {2016},
	doi = {10.5065/D6WW7G29},
	note = {Language: en},
	keywords = {Data processing, Software, Earth sciences, Free computer software, Geospatial data, Open source software, Python (Computer program language)},
}

@article{stauffer_colorspace_2024,
	title = {colorspace: {A} {Python} {Toolbox} for {Manipulating} and {Assessing} {Colors} and {Palettes}},
	volume = {9},
	issn = {2475-9066},
	shorttitle = {colorspace},
	url = {https://joss.theoj.org/papers/10.21105/joss.07120},
	doi = {10.21105/joss.07120},
	abstract = {Stauffer et al., (2024). colorspace: A Python Toolbox for Manipulating and Assessing Colors and Palettes. Journal of Open Source Software, 9(102), 7120, https://doi.org/10.21105/joss.07120},
	language = {en},
	number = {102},
	urldate = {2025-09-20},
	journal = {Journal of Open Source Software},
	author = {Stauffer, Reto and Zeileis, Achim},
	month = oct,
	year = {2024},
	pages = {7120},
}
